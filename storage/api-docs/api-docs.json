{
    "openapi": "3.0.0",
    "info": {
        "title": "Wossolaty API Documentation",
        "description": "This is a wossolaty API Documentation",
        "contact": {
            "email": "haidershamil@gmail"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://my-default-host.com",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/api/accounts": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Returns API response of all accounts",
                "description": "A sample test of the API",
                "operationId": "getProjectsList",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Store new account",
                "description": "Returns account data",
                "operationId": "storeAccount",
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/accounts/{id}": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get account information",
                "description": "Returns account data",
                "operationId": "getAccountById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Account"
                ],
                "summary": "Update existing account",
                "description": "Returns updated account data",
                "operationId": "updateAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Account"
                ],
                "summary": "Delete existing account",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/account_roles": {
            "get": {
                "tags": [
                    "Account_Role"
                ],
                "summary": "Returns API response of all account_roles",
                "description": "A sample test of the API",
                "operationId": "getaccount_rolesList",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Account_Role"
                ],
                "summary": "Store new account_roles",
                "description": "Returns account_roles data",
                "operationId": "storeAccount_Role",
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/account_roles/{id}": {
            "get": {
                "tags": [
                    "Account_Role"
                ],
                "summary": "Get account_role information",
                "description": "Returns account_role data",
                "operationId": "getAccount_RoleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Account_Role"
                ],
                "summary": "Update existing Account_Role",
                "description": "Returns updated Account_Role data",
                "operationId": "updateAccount_Role",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Account_Role"
                ],
                "summary": "Delete existing Account_Role",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteAccount_Role",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/cash_details": {
            "get": {
                "tags": [
                    "Cash_Detail"
                ],
                "summary": "Returns API response of all Cash_Detail",
                "description": "A sample test of the API",
                "operationId": "getCash_DetailList",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Cash_Detail"
                ],
                "summary": "Store new Cash_Detail",
                "description": "Returns Cash_Detail data",
                "operationId": "storeCash_Detail",
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/cash_details/{id}": {
            "get": {
                "tags": [
                    "Cash_Detail"
                ],
                "summary": "Get Cash_Detail information",
                "description": "Returns Cash_Detail data",
                "operationId": "getCash_DetailById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cash_Detail id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Cash_Detail"
                ],
                "summary": "Update existing Cash_Detail",
                "description": "Returns updated Cash_Detail data",
                "operationId": "updateCash_Detail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cash_Detail"
                ],
                "summary": "Delete existing Cash_Detail",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCash_Detail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cash_Detail id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/cash_types": {
            "get": {
                "tags": [
                    "Cash_Type"
                ],
                "summary": "Returns API response of all Cash_Type",
                "description": "A sample test of the API",
                "operationId": "getCash_TypeList",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Cash_Type"
                ],
                "summary": "Store new Cash_Type",
                "description": "Returns Cash_Type data",
                "operationId": "storeCash_Type",
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/cash_types/{id}": {
            "get": {
                "tags": [
                    "Cash_Type"
                ],
                "summary": "Get Cash_Type information",
                "description": "Returns Cash_Type data",
                "operationId": "getCash_TypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cash_Type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Cash_Type"
                ],
                "summary": "Update existing Cash_Type",
                "description": "Returns updated Cash_Type data",
                "operationId": "updateCash_Type",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cash_Type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cash_Type"
                ],
                "summary": "Delete existing Cash_Type",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCash_Type",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cash_Type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/governorates": {
            "get": {
                "tags": [
                    "Governorate"
                ],
                "summary": "Returns API response of all Governorate",
                "description": "A sample test of the API",
                "operationId": "getGovernorateList",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Governorate"
                ],
                "summary": "Store new Governorate",
                "description": "Returns Governorate data",
                "operationId": "storeGovernorate",
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/governorates/{id}": {
            "get": {
                "tags": [
                    "Governorate"
                ],
                "summary": "Get Governorate information",
                "description": "Returns Governorate data",
                "operationId": "getGovernorateById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Governorate id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Governorate"
                ],
                "summary": "Update existing Governorate",
                "description": "Returns updated Governorate data",
                "operationId": "updateGovernorate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Governorate id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Governorate"
                ],
                "summary": "Delete existing Governorate",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteGovernorate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Governorate id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/invoices": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Returns API response of all Invoice",
                "description": "A sample test of the API",
                "operationId": "getInvoiceList",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Store new Invoice",
                "description": "Returns Invoice data",
                "operationId": "storeInvoice",
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/invoices/{id}": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Get Invoice information",
                "description": "Returns Invoice data",
                "operationId": "getInvoiceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Update existing Invoice",
                "description": "Returns updated Invoice data",
                "operationId": "updateInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Delete existing Invoice",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteInvoicee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/total/{id}": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Get total Invoice information",
                "description": "Returns total Invoice data",
                "operationId": "getInvoicetotalById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/invoice_types": {
            "get": {
                "tags": [
                    "Invoice_Type"
                ],
                "summary": "Returns API response of all Invoice_Type",
                "description": "A sample test of the API",
                "operationId": "getInvoice_TypeList",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Invoice_Type"
                ],
                "summary": "Store new Invoice_Type",
                "description": "Returns Invoice_Type data",
                "operationId": "storeInvoice_Type",
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/invoice_types/{id}": {
            "get": {
                "tags": [
                    "Invoice_Type"
                ],
                "summary": "Get Invoice_Type information",
                "description": "Returns Invoice_Type data",
                "operationId": "getInvoice_TypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice_Type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Invoice_Type"
                ],
                "summary": "Update existing Invoice_Type",
                "description": "Returns updated Invoice_Type data",
                "operationId": "updateInvoice_Type",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice_Type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Invoice_Type"
                ],
                "summary": "Delete existing Invoice_Type",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteInvoice_Type",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice_Type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/payment_types": {
            "get": {
                "tags": [
                    "Payment_Type"
                ],
                "summary": "Returns API response of all Payment_Type",
                "description": "A sample test of the API",
                "operationId": "getPayment_TypeList",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Payment_Type"
                ],
                "summary": "Store new Payment_Type",
                "description": "Returns Payment_Type data",
                "operationId": "storePayment_Type",
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/payment_types/{id}": {
            "get": {
                "tags": [
                    "Payment_Type"
                ],
                "summary": "Get Payment_Type information",
                "description": "Returns Payment_Type data",
                "operationId": "getPayment_TypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment_Type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Payment_Type"
                ],
                "summary": "Update existing Payment_Type",
                "description": "Returns updated Payment_Type data",
                "operationId": "updatePayment_Type",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment_Type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Payment_Type"
                ],
                "summary": "Delete existing Payment_Type",
                "description": "Deletes a record and returns no content",
                "operationId": "deletePayment_Type",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment_Type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Returns API response of all Product",
                "description": "A sample test of the API",
                "operationId": "getProductList",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Store new Product",
                "description": "Returns Product data",
                "operationId": "storeProduct",
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Product information",
                "description": "Returns Product data",
                "operationId": "getProductById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Update existing Product",
                "description": "Returns updated Product data",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete existing Product",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/indexStore/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Products of some store information",
                "description": "Returns Products of some store data",
                "operationId": "getindexStoreById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "store id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/products_states": {
            "get": {
                "tags": [
                    "Product_State"
                ],
                "summary": "Returns API response of all Product_State",
                "description": "A sample test of the API",
                "operationId": "getProduct_StateList",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Product_State"
                ],
                "summary": "Store new Product_State",
                "description": "Returns Product_State data",
                "operationId": "storeProduct_State",
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/products_states/{id}": {
            "get": {
                "tags": [
                    "Product_State"
                ],
                "summary": "Get Product_State information",
                "description": "Returns Product_State data",
                "operationId": "getProduct_StateById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product_State id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Product_State"
                ],
                "summary": "Update existing Product_State",
                "description": "Returns updated Product_State data",
                "operationId": "updateProduct_State",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product_State id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product_State"
                ],
                "summary": "Delete existing Product_State",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProduct_State",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product_State id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/receipts": {
            "get": {
                "tags": [
                    "Receipt"
                ],
                "summary": "Returns API response of all Receipt",
                "description": "A sample test of the API",
                "operationId": "getReceiptList",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Receipt"
                ],
                "summary": "Store new Receipt",
                "description": "Returns Receipt data",
                "operationId": "storeReceipt",
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/receipts/{id}": {
            "get": {
                "tags": [
                    "Receipt"
                ],
                "summary": "Get Receipt information",
                "description": "Returns Receipt data",
                "operationId": "getReceiptById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Receipt id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Receipt"
                ],
                "summary": "Update existing Receipt",
                "description": "Returns updated Receipt data",
                "operationId": "updateReceipt",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Receipt id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Receipt"
                ],
                "summary": "Delete existing Receipt",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteReceipt",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Receipt id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/stocks": {
            "get": {
                "tags": [
                    "Stock"
                ],
                "summary": "Returns API response of all Stock",
                "description": "A sample test of the API",
                "operationId": "getStockList",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Stock"
                ],
                "summary": "Store new Stock",
                "description": "Returns Stock data",
                "operationId": "storeStock",
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/stocks/{id}": {
            "get": {
                "tags": [
                    "Stock"
                ],
                "summary": "Get Stock information",
                "description": "Returns Stock data",
                "operationId": "getStockById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Stock id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Stock"
                ],
                "summary": "Update existing Stock",
                "description": "Returns updated Stock data",
                "operationId": "updateStock",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Stock id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Stock"
                ],
                "summary": "Delete existing Stock",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteStock",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Stock id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "title": "Account",
                "description": "Account model",
                "xml": {
                    "name": "Account"
                }
            },
            "Account_Role": {
                "title": "Account_Role",
                "description": "Account_Role model",
                "xml": {
                    "name": "Account_Role"
                }
            },
            "Cash_Detail": {
                "title": "Cash_Detail",
                "description": "Cash_Detail model",
                "xml": {
                    "name": "Cash_Detail"
                }
            },
            "Cash_Type": {
                "title": "Cash_Type",
                "description": "Cash_Type model",
                "xml": {
                    "name": "Cash_Type"
                }
            },
            "Governorate": {
                "title": "Governorate",
                "description": "Governorate model",
                "xml": {
                    "name": "Governorate"
                }
            },
            "Invoice": {
                "title": "Invoice",
                "description": "Invoice model",
                "xml": {
                    "name": "Invoice"
                }
            },
            "Invoice_Type": {
                "title": "Invoice_Type",
                "description": "Invoice_Type model",
                "xml": {
                    "name": "Invoice_Type"
                }
            },
            "Payment_Type": {
                "title": "Payment_Type",
                "description": "Payment_Type model",
                "xml": {
                    "name": "Payment_Type"
                }
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "xml": {
                    "name": "Product"
                }
            },
            "Product_State": {
                "title": "Product_State",
                "description": "Product_State model",
                "xml": {
                    "name": "Product_State"
                }
            },
            "Receipt": {
                "title": "Receipt",
                "description": "Receipt model",
                "xml": {
                    "name": "Receipt"
                }
            },
            "Stock": {
                "title": "Stock",
                "description": "Stock model",
                "xml": {
                    "name": "Stock"
                }
            }
        },
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Account_Role",
            "description": "Sample APIs Everything about your Account_Role "
        },
        {
            "name": "Account",
            "description": "Sample APIs Everything about your Account "
        },
        {
            "name": "Cash_Detail",
            "description": "Sample APIs Everything about your Cash_Detail "
        },
        {
            "name": "Cash_Type",
            "description": "Sample APIs Everything about your Cash_Type "
        },
        {
            "name": "Governorate",
            "description": "Sample APIs Everything about your Governorate "
        },
        {
            "name": "Invoice_Type",
            "description": "Sample APIs Everything about your Invoice_Type "
        },
        {
            "name": "Invoice",
            "description": "Sample APIs Everything about your Invoice "
        },
        {
            "name": "Payment_Type",
            "description": "Sample APIs Everything about your Payment_Type "
        },
        {
            "name": "Product_State",
            "description": "Sample APIs Everything about your Product_State "
        },
        {
            "name": "Product",
            "description": "Sample APIs Everything about your Product "
        },
        {
            "name": "Receipt",
            "description": "Sample APIs Everything about your Receipt "
        },
        {
            "name": "Stock",
            "description": "Sample APIs Everything about your Stock "
        }
    ]
}